AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'SAM Template for orders

  '
Globals:
  Api:
    TracingEnabled: true
Parameters:
  UserPool:
    Type: String
    Description: User Pool ID produced by the Users module
Resources:
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: orderId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: orderId
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  PyUtils:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: pyutils
      Description: Shared utilities for Orders service
      ContentUri: PyUtils
      CompatibleRuntimes:
      - python3.9
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.9
      SamResourceId: PyUtils
  GetOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetOrderFunction
      Handler: get_order.lambda_handler
      Runtime: python3.9
      Tracing: Active
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: OrdersTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: OrdersTable
      Layers:
      - Ref: PyUtils
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders/{orderId}
            Method: get
            RestApiId:
              Ref: WorkshopApiGateway
    Metadata:
      SamResourceId: GetOrderFunction
  WorkshopApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: Module3CognitoAuthorizer
        Authorizers:
          Module3CognitoAuthorizer:
            UserPoolArn:
              Fn::Sub: arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}
  AddOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AddOrderFunction
      Handler: create_order.lambda_handler
      Runtime: python3.9
      Tracing: Active
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: OrdersTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: OrdersTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: post
            RestApiId:
              Ref: WorkshopApiGateway
    Metadata:
      SamResourceId: AddOrderFunction
Outputs:
  OrdersServiceEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${WorkshopApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod
  OrdersTable:
    Description: DynamoDb Orders Table
    Value:
      Ref: OrdersTable
